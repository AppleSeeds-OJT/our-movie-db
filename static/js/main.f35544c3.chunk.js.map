{"version":3,"sources":["Services/httpService.js","Services/service.js","Components/HitPreview/index.jsx","Components/Search/index.jsx","Components/Navbar/index.jsx","Components/Favorite/index.jsx","Components/MovieCard/index.jsx","Components/NowPlayingCarousel/index.jsx","Pages/Home/index.jsx","Components/Rating/index.jsx","Components/Actor/index.jsx","Pages/MovieDetails/index.jsx","Pages/FavoriteMovies/index.jsx","Pages/ActorDetails/index.jsx","Services/storageService.js","App.js","reportWebVitals.js","index.js"],"names":["get","API","a","axios","fetchedResults","data","errFunc","err","console","log","query","what","httpService","BASE_URL_TMDB","API_KEY_TMDB","getById","id","getByMovieName","movieName","formattedMovieName","split","join","BASE_URL_OMDB","API_KEY_OMDB","searchByKeyword","keyword","formattedKeyword","getExternalId","TMDBid","getMovieFromOMDBByIMDBId","IMDBid","getFiveRandomMovies","moviesArr","originalMoviesArr","fiveRandomMovies","i","randomMovieIdx","Math","floor","random","length","push","splice","getImages","useStyles","makeStyles","theme","hit","cursor","border","color","flex","display","image","margin","width","height","title","whiteSpace","overflow","textOverflow","details","flexDirection","padding","star","marginRight","icon","Search","props","classes","history","useHistory","useState","isMovie","currItem","state","setState","useEffect","movieInfo","gottenItem","service","getHitInfo","hitId","imgPath","selectAndClearSearch","onClearSearch","className","onClick","imdbID","src","Poster","alt","Box","fontSize","textAlign","Title","Year","imdbRating","profile_path","name","term","getProfession","known_for_department","searchBar","position","realTimeSearchRes","backgroundColor","searchTerm","searchHits","delay","setTimeout","actors","movies","Promise","all","then","results","actorArr","movieArr","slice","combinedSearchResults","map","movie","getMovieDetails","concat","clearTimeout","setSearchTerm","placeholder","type","value","onChange","ev","target","index","HitPreview","gender","navbar","top","paddingLeft","zIndex","alignItems","justifyContent","link","fontWeight","Navbar","favorite","Favorite","favMovies","currMovieId","isFavorite","movieId","isFavMovie","find","item","onToggleIsFavorite","card","transition","transformStyle","transform","movieCard","borderRadius","backgroundImage","imgUrl","backfaceVisibility","backgroundRepeat","backgroundSize","front","back","bottom","left","borderBottomLeftRadius","borderBottomRightRadius","badges","badge","rating","detailsBtn","MovieCard","imdbId","gottenMovieId","imdb_id","gottenMovie","getImgUrl","posterPath","getByExternalId","Card","movieReleaseYear","movieRating","Button","variant","carousel","marginTop","NowPlayingCarousel","carouselMovies","moviesToShow","gottenMovies","getMovies","infiniteLoop","showStatus","showThumbs","showIndicators","backdropPath","backdrop_path","lineHeight","original_title","overview","releaseDate","release_date","vote_average","homePage","intro","marginBottom","subtitle","cardContainer","gridTemplateColumns","gridAutoRows","gridGap","queryType","queryBtn","Home","param","style","poster_path","rater","Rating","currRating","plot","rawRaterName","getRater","Source","Value","imgBackground","paddingTop","boxShadow","Actor","currActor","actorName","gottenActor","getActorById","moviePage","body","backdrop","subTitle","ratings","tagline","actorsContainer","marginLeft","MovieDetails","useParams","currMovie","imdbMovieId","movieDetails","getMovieById","Genre","Runtime","Language","Ratings","fontStyle","Plot","Actors","actor","FavoriteMovies","actorPage","imagesContainer","ActorDetails","actorImages","tmdbActorId","actorImageArr","profiles","file_path","loadFromLocalStorage","JSON","parse","localStorage","getItem","saveToLocalStorage","localStorageData","favMovieIdx","indexOf","setItem","stringify","newFavMovieArr","App","favoriteMovies","storageService","toggleIsFavorite","reloadFavMovies","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f35544c3.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default {\r\n    get\r\n}\r\n\r\nasync function get(API) {\r\n    try {\r\n        const fetchedResults = await axios.get(API)\r\n        return fetchedResults.data\r\n    } catch(err) {\r\n        errFunc(err)\r\n    }\r\n}\r\n\r\nfunction errFunc(err) {\r\n    console.log(err)\r\n}","import httpService from './httpService.js';\r\n\r\nexport default {\r\n    query,\r\n    getById,\r\n    getByMovieName,\r\n    searchByKeyword,\r\n    getExternalId,\r\n    getMovieFromOMDBByIMDBId,\r\n    getFiveRandomMovies,\r\n    getImages\r\n}\r\n\r\n// ohad's TMDB API Key:\r\nconst API_KEY_TMDB = 'e5a2122bd03016f587131ffe3ecc2596'; \r\n// ohad's OMDB API Key:\r\nconst API_KEY_OMDB = '9fadc571';\r\n\r\n// TMDB base API\r\nconst BASE_URL_TMDB = 'https://api.themoviedb.org/3/';\r\n// const BASE_URL_TMDB = 'https://api.themoviedb.org/3/discover/movie';\r\n// OMDB base API\r\nconst BASE_URL_OMDB = 'http://www.omdbapi.com/';\r\n\r\nfunction query(what) { // this fetches first 20 most popuplar movies from TMDB.\r\n    // example API string for finding the 20 most recent movies released, from the \"discover\" API: \r\n    // https://api.themoviedb.org/3/discover/movie?api_key=e5a2122bd03016f587131ffe3ecc2596&language=en-US&sort_by=primary_release_date.desc&include_adult=false&include_video=false&page=1\r\n    if (what === 'latest') {\r\n        //return httpService.get(`${BASE_URL_TMDB}discover/movie/?api_key=${API_KEY_TMDB}&language=en-US&sort_by=release_date.desc&include_adult=false&include_video=false&page=1`);\r\n       //https://api.themoviedb.org/3/movie/now_playing?api_key=<<api_key>>&language=en-US&page=1&region=ISR\r\n         return httpService.get(`${BASE_URL_TMDB}movie/now_playing?api_key=${API_KEY_TMDB}&language=en-US&page=1&region=US`);\r\n    } else if (what === 'popular') {\r\n    // example API string for finding the 20 most popular movies, from the \"popular\" API:\r\n    // return httpService.get(`${BASE_URL_TMDB}movie/${what}?api_key=${API_KEY_TMDB}&language=en-US&page=1`);\r\n\r\n    // example API string for finding the 20 most popular movies, from the \"discover\" API:\r\n    // https://api.themoviedb.org/3/discover/movie?api_key=e5a2122bd03016f587131ffe3ecc2596&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1\r\n    return httpService.get(`${BASE_URL_TMDB}discover/movie/?api_key=${API_KEY_TMDB}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1/`);\r\n    } else if (what === 'trending'){\r\n    // example API string for weekly trending movie from TMDB: https://api.themoviedb.org/3/trending/movie/week?api_key=e5a2122bd03016f587131ffe3ecc2596\r\n        return httpService.get(`${BASE_URL_TMDB}trending/movie/week?api_key=${API_KEY_TMDB}`);\r\n    }\r\n}\r\n\r\nfunction getExternalId(TMDBid) { // this fetches the IMDB-ID of a specific movie from TMDB.\r\n    // example API string: https://api.themoviedb.org/3/movie/{movie_id}/external_ids?api_key=e5a2122bd03016f587131ffe3ecc2596\r\n    return httpService.get(`${BASE_URL_TMDB}movie/${TMDBid}/external_ids?api_key=${API_KEY_TMDB}`);\r\n}\r\n\r\nfunction getById(what, id) { // this fetches more movie/actor details from TMDB, based on the ID.\r\n    if (what === 'movie') {\r\n        // example API string of movie by TMDB-ID: https://api.themoviedb.org/3/movie/682377?api_key=e5a2122bd03016f587131ffe3ecc2596&language=en-US\r\n        return httpService.get(`${BASE_URL_TMDB}movie/${id}?api_key=${API_KEY_TMDB}&language=en-US`);\r\n    } else if (what === 'actor'){\r\n        // example API of actor by ID: https://api.themoviedb.org/3/person/11662?api_key=e5a2122bd03016f587131ffe3ecc2596&language=en-US\r\n        return httpService.get(`${BASE_URL_TMDB}person/${id}?api_key=${API_KEY_TMDB}&language=en-US`);\r\n    } \r\n}\r\n\r\nfunction getImages(TMDBid){\r\n    // example API from TMDB: https://api.themoviedb.org/3/person/11662/images?api_key=e5a2122bd03016f587131ffe3ecc2596\r\n    return httpService.get(`${BASE_URL_TMDB}person/${TMDBid}/images?api_key=${API_KEY_TMDB}`);\r\n}\r\n\r\nfunction getMovieFromOMDBByIMDBId(IMDBid) { // this fetches more movie details from OMDB, based on the IMDB-ID.\r\n    // example API string by IMDB-ID: http://www.omdbapi.com/?i=tt3896198&apikey=9fadc571\r\n    return httpService.get(`${BASE_URL_OMDB}?i=${IMDBid}&apikey=${API_KEY_OMDB}`);\r\n}\r\n\r\n// function getMoviesFromOMDB(term){\r\n//     http://www.omdbapi.com/?s=Batman&apikey=9fadc571&page=1\r\n// }\r\n\r\nfunction getByMovieName(movieName) { // this fetches more movie details from OMDB, based on the movie's name.\r\n// example API string by movie name: http://www.omdbapi.com/?t=avatar+5&apikey=9fadc571\r\n    // first need to format the string the way that OMDB expects it:\r\n    const formattedMovieName = movieName.split(' ').join('+'); \r\n    return httpService.get(`${BASE_URL_OMDB}?t=${formattedMovieName}&apikey=${API_KEY_OMDB}`);\r\n}\r\n\r\nfunction searchByKeyword(what, keyword){\r\n    const formattedKeyword = keyword.split(' ').join('%20');\r\n    // *** maybe: we should fetch results for both people AND moves separately, and then construct the results such that if there are people, then show some of them first, and then show movies...\r\n    if (what === 'actors') {\r\n        // https://api.themoviedb.org/3/search/person?api_key=e5a2122bd03016f587131ffe3ecc2596&language=en-US&query=robert%20pattinson&page=1&include_adult=false <-- searches in People\r\n        return httpService.get(`${BASE_URL_TMDB}search/person?api_key=${API_KEY_TMDB}&language=en-US&query=${formattedKeyword}&page=1&include_adult=false`);\r\n    } else if (what === 'movies') {\r\n        // // https://api.themoviedb.org/3/search/keyword?api_key=e5a2122bd03016f587131ffe3ecc2596&query=as&page=1 <-- searches in Movies, but TMDB provies very poor results...\r\n        // return httpService.get(`${BASE_URL_TMDB}search/keyword?api_key=${API_KEY_TMDB}&query=${formattedKeyword}&page=1`);\r\n        // http://www.omdbapi.com/?s=Batman&apikey=9fadc571&page=1 <-- so going with the OMDB movieFinder option\r\n        return httpService.get(`${BASE_URL_OMDB}?s=${formattedKeyword}&apikey=${API_KEY_OMDB}&page=1`);\r\n    }\r\n    // https://api.themoviedb.org/3/search/multi?api_key=e5a2122bd03016f587131ffe3ecc2596&language=en-US&query=adam%20sandler&page=1&include_adult=false <-- searches \"multi\" (TV/movies/actors)\r\n    // return httpService.get(`${BASE_URL_TMDB}search/multi?api_key=${API_KEY_TMDB}&language=en-US&query=${formattedKeyword}&page=1&include_adult=false`);\r\n}\r\n\r\n\r\n// function getFiveRandomMovies(moviesArr) { // the \"While loop\" kills it !\r\n//     const fiveRandomMovies = new Set();\r\n//     const isNotFiveMovies = fiveRandomMovies.size < 5;\r\n//     while (isNotFiveMovies) {\r\n//         const randomMovieIndex = Math.floor(Math.random() * moviesArr.length)\r\n//         const randomMovie = moviesArr[randomMovieIndex];\r\n//         fiveRandomMovies.add(randomMovie);\r\n//     }\r\n//     return fiveRandomMovies;\r\n// } \r\n\r\nfunction getFiveRandomMovies(moviesArr) {\r\n    const originalMoviesArr = [...moviesArr];\r\n    const fiveRandomMovies = []; \r\n    for (let i = 0; i < 5; i++) {\r\n        const randomMovieIdx = Math.floor(Math.random() * originalMoviesArr.length);\r\n        fiveRandomMovies.push(originalMoviesArr[randomMovieIdx]);\r\n        originalMoviesArr.splice(randomMovieIdx,1);\r\n    }\r\n    return fiveRandomMovies\r\n} \r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory} from 'react-router-dom';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport TheatersIcon from '@material-ui/icons/Theaters';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport service from \"../../Services/service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    hit: {\r\n        cursor: `pointer`,\r\n        border: `1px solid white`,\r\n        color: `white`\r\n    },\r\n    flex: {\r\n        display: `flex`,\r\n    },\r\n    image: {\r\n        border: `1px solid white`,\r\n        margin: 5,\r\n        width: 50,\r\n        height: 80\r\n    },\r\n    title: {\r\n        width: 160,\r\n        whiteSpace: `nowrap`,\r\n        overflow: `hidden`,\r\n        textOverflow: `ellipsis`\r\n    },\r\n    details: {\r\n        display: `flex`,\r\n        flexDirection: `column`,\r\n        padding: 5\r\n    },\r\n    star: {\r\n        marginRight: 10,\r\n        color: `yellow`\r\n    },\r\n    icon: {\r\n        marginRight: 10,\r\n    }\r\n}));\r\n\r\nfunction Search(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [state, setState] = useState({\r\n    isMovie: null,  \r\n    currItem: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function getHitInfo(isMovie, movieInfo, id) {\r\n        setState((state) => ({ ...state, isMovie }));\r\n        let gottenItem = {};\r\n        if (isMovie) {\r\n            setState((state) => ({ ...state, currItem: movieInfo }));\r\n        } else if (!isMovie) {\r\n            gottenItem = await service.getById('actor',id);\r\n            if (!gottenItem) console.log('this actorItem could not be fetched: ', id);\r\n            setState((state) => ({ ...state, currItem: gottenItem }));\r\n        }\r\n      }\r\n      getHitInfo(props.isMovie, props.movieInfo, props.hitId);\r\n  }, []);\r\n\r\n  const getImgUrl = (imgPath) => {\r\n    return `https://image.tmdb.org/t/p/original${imgPath}`;\r\n  };\r\n\r\n  const getProfession = (term) => { // may need to add more\r\n    switch(term){\r\n        case 'Acting':\r\n            return 'Actor'\r\n        case 'Directing':\r\n            return 'Director'\r\n        case 'Producing':\r\n            return 'Producer'\r\n        default:\r\n            return 'other'\r\n    }\r\n  }\r\n\r\n  const selectAndClearSearch = (what, id) => {\r\n    props.onClearSearch();\r\n    if (what === 'movie') {\r\n        history.push(`/movie/${id}`)\r\n    } else {\r\n        history.push(`/actor/${id}`)\r\n    }  \r\n}\r\n\r\n  return (\r\n    <div className={classes.hit}>\r\n        {(state.currItem && state.isMovie) && <div className={classes.flex} onClick={() => selectAndClearSearch('movie', state.currItem.imdbID)}>\r\n            <img className={classes.image} src={state.currItem.Poster} alt=\"\" />\r\n            <div className={classes.details}>   \r\n                <Box className={classes.title} fontSize={14} textAlign=\"left\">{state.currItem.Title}</Box>\r\n                <div className={classes.flex}>\r\n                    <TheatersIcon className={classes.icon}></TheatersIcon>\r\n                    <Box fontSize={14}>{state.currItem.Year}</Box>\r\n                </div>\r\n                <div className={classes.flex}>\r\n                    <StarIcon className={classes.star}></StarIcon>\r\n                    <Box fontSize={14}>{state.currItem.imdbRating}</Box>\r\n                </div>\r\n            </div>\r\n        </div>} \r\n        {(state.currItem && !state.isMovie) && <div className={classes.flex} onClick={() => selectAndClearSearch('actor', state.currItem.id)}>\r\n            <img className={classes.image} src={getImgUrl(state.currItem.profile_path)} alt=\"\" />\r\n            <div className={classes.details}>   \r\n                <Box fontSize={14} textAlign=\"left\">{state.currItem.name}</Box>\r\n                <div className={classes.flex}>\r\n                    <PersonIcon className={classes.icon}></PersonIcon>\r\n                    <Box fontSize={14}>{getProfession(state.currItem.known_for_department)}</Box>\r\n                </div>\r\n            </div>\r\n        </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport HitPreview from '../HitPreview/index'\r\nimport service from \"../../Services/service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    searchBar: {\r\n        position: `relative`,\r\n        marginRight: 20\r\n    },\r\n    realTimeSearchRes: {\r\n        position: `absolute`,\r\n        width: 230,\r\n        backgroundColor: `#524763`,\r\n    }\r\n}));\r\n\r\nfunction Search() {\r\n  const classes = useStyles();\r\n  \r\n  const [state, setState] = useState({\r\n    searchTerm: '',\r\n    searchHits: []\r\n});\r\n\r\n  useEffect(() => { \r\n      if (state.searchTerm.length > 0) {\r\n          let delay = null;\r\n          function delaySearch(term) {\r\n              delay = setTimeout(() => {\r\n                const actors = service.searchByKeyword('actors', term);\r\n                const movies = service.searchByKeyword('movies', term);\r\n                Promise.all([actors, movies])\r\n                .then((results) => { // trying to move this out into service.js... so far unsuccessfully...\r\n                    let actorArr;\r\n                    let movieArr;\r\n                    if (results[0].results) {\r\n                        actorArr = results[0].results.slice(0,2);\r\n                    } \r\n                    if (results[1].Search) {\r\n                        movieArr = results[1].Search.slice(0,4);\r\n                        let combinedSearchResults = [];\r\n                        const getMovieDetails = async () => {\r\n                            return Promise.all(movieArr.map(movie => service.getMovieFromOMDBByIMDBId(movie.imdbID)))\r\n                        }\r\n                        getMovieDetails()\r\n                        .then(results => {\r\n                            combinedSearchResults = actorArr.concat(results)\r\n                            setState(state => ({ ...state, searchHits: combinedSearchResults }))\r\n                        })\r\n                    }\r\n                });\r\n              }, 1000)\r\n          }\r\n          delaySearch(state.searchTerm);\r\n          return () => clearTimeout(delay)\r\n      } else {\r\n        setState((state) => ({ ...state, searchHits: [] }))\r\n      }\r\n  }, [state.searchTerm]);\r\n\r\nconst setSearchTerm = (term='') => {\r\n    setState((state) => ({ ...state, searchTerm: term }));\r\n}\r\n\r\n  return (\r\n    <div className={classes.searchBar}>\r\n        <form>\r\n            <input className=\"\" placeholder=\"search all\" type=\"text\" value={state.searchTerm} onChange={(ev)=> setSearchTerm(ev.target.value)} />\r\n            <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n        {state.searchHits.length > 0 && <div className={classes.realTimeSearchRes}>\r\n            <div>{state.searchHits.map((hit, index) => (\r\n                <div key={index} >\r\n                    <HitPreview \r\n                    onClearSearch={setSearchTerm}\r\n                    isMovie={(!hit.gender) ? true : false} \r\n                    movieInfo={(hit.imdbID) ? hit : {}} \r\n                    hitId={(hit.id) ? hit.id : {}}/>\r\n                </div>\r\n            ))}</div>\r\n        </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory} from 'react-router-dom'\r\nimport Search from \"../Search/index\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navbar: {\r\n        position: `fixed`,\r\n        top: 0,\r\n        width: `100%`,\r\n        height: 40,\r\n        paddingLeft: 10,\r\n        zIndex: 1000000,\r\n        backgroundColor: `#625577`,\r\n        display: `flex`,\r\n        alignItems: `center`,\r\n        justifyContent: `space-between`\r\n    },\r\n    link: {\r\n        fontWeight: `bold`,\r\n        cursor: `pointer`,\r\n        color: `white`\r\n    }\r\n  }));\r\n\r\nfunction Navbar() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className={classes.navbar}>\r\n        <div className={classes.link} onClick={() => history.push(`/`)}>Our-MovieDB</div>\r\n        <div className={classes.link} onClick={() => history.push(`/favmovies/`)}>Favorites</div>\r\n        {/* <div>Sign In</div>\r\n        <div>ColorChange</div> */}\r\n        <div><Search /></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  favorite: {\r\n    color: `red`\r\n  },\r\n  cursor: {\r\n    cursor: `pointer`\r\n  }\r\n}));\r\n\r\nfunction Favorite(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    favMovies: null,\r\n    currMovieId: null,\r\n    isFavorite: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    setState((state) => ({...state, favMovies: props.favMovies, currMovieId: props.movieId }));\r\n    if (props.favMovies) {\r\n      const isFavMovie = props.favMovies.find((item) => item === props.movieId); \r\n      if (isFavMovie) {\r\n        setState((state) => ({...state, isFavorite: true })) \r\n      } else {\r\n        setState((state) => ({...state, isFavorite: false })) \r\n      }\r\n    }\r\n  }, [props.favMovies, props.movieId]);\r\n\r\n  return (\r\n    <div className={classes.cursor} onClick={() => props.onToggleIsFavorite(state.currMovieId)}>\r\n      {(state.isFavorite) ? <FavoriteIcon className={classes.favorite}></FavoriteIcon> : <FavoriteBorderIcon></FavoriteBorderIcon> }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Favorite;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory} from 'react-router-dom'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {Card, Button} from \"@material-ui/core\";\r\nimport Favorite from \"../../Components/Favorite/index\"\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport service from \"../../Services/service\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    height: 280,\r\n    transition: `transform 0.3s ease 0s`,\r\n    transformStyle: `preserve-3d`,\r\n    position: `relative`,\r\n    '&:hover': {\r\n      transform: `rotateY(180deg)`,\r\n    }\r\n  },\r\n  movieCard: {\r\n    display: `flex`,\r\n    alignItems: `center`,\r\n    justifyContent: `center`,\r\n    position: `absolute`,\r\n    borderRadius: `4px`,\r\n    width: `100%`,\r\n    height: `100%`,\r\n    backgroundImage: (state) => state.imgUrl,\r\n    backfaceVisibility: `hidden`,\r\n    backgroundRepeat: `no-repeat`,\r\n    backgroundSize: `100% 100%`,\r\n  },\r\n  front: {\r\n  },\r\n  back: {\r\n    transform: `rotateY(180deg)`\r\n  },\r\n  title: {\r\n    backgroundColor: `aqua`,\r\n    width: `90%`,\r\n    position: `absolute`,\r\n    bottom: 0,\r\n    left: 0,\r\n    borderBottomLeftRadius: `4px`,\r\n    borderBottomRightRadius: `4px`,\r\n    textAlign: `center`,\r\n    whiteSpace: `nowrap`,\r\n    overflow: `hidden`,\r\n    textOverflow: `ellipsis`,\r\n    padding: `0px 10px 0px 10px`,\r\n    fontWeight: `500`\r\n  },\r\n  badges: {\r\n    position: `absolute`,\r\n    width: `94%`,\r\n    top: 10,\r\n    padding: `0px 5px 0px 5px`,\r\n    display: `flex`,\r\n    justifyContent: `space-between`,\r\n  },\r\n  badge: {\r\n    backgroundColor: `aqua`,\r\n    borderRadius: `4px`,\r\n    textAlign: `center`,\r\n    padding: `0px 5px 0px 5px`,\r\n    fontWeight: `500`\r\n  },\r\n  rating: {\r\n    display: `flex`,\r\n    alignItems: `center`,\r\n    justifyContent: `space-between`\r\n  },\r\n  star: {\r\n    color: `yellow`\r\n  },\r\n  detailsBtn: {\r\n    '&:hover': {\r\n      color: `black`,\r\n      backgroundColor: `aqua`,\r\n      transform: `translateY(-2px)`\r\n    }\r\n  }\r\n});\r\n\r\nfunction MovieCard(props) {\r\n  const [state, setState] = useState({\r\n    imdbId: null,\r\n    imgUrl: null\r\n  });\r\n\r\n  const history = useHistory();\r\n  const classes = useStyles(state);\r\n  \r\n  useEffect(() => {\r\n    async function getByExternalId(id) {\r\n      const gottenMovieId = await service.getExternalId(id);\r\n      const imdbId = gottenMovieId.imdb_id;\r\n      const gottenMovie = await service.getMovieFromOMDBByIMDBId(imdbId);\r\n      if (gottenMovie.Poster) {\r\n        setState((state) => ({...state, imdbId, imgUrl: `url(\"${gottenMovie.Poster}\")` }));\r\n      } else {\r\n        setState((state) => ({...state, imdbId, imgUrl: getImgUrl(props.posterPath) }));\r\n      }\r\n    } \r\n    getByExternalId(props.movieId);\r\n  }, [props.movieName, props.posterPath]);\r\n\r\n  const getImgUrl = (posterPath) => {\r\n    return `url(https://image.tmdb.org/t/p/original${posterPath})`\r\n  }\r\n\r\n  return (\r\n    <div className={classes.card}>\r\n      <Card className={`${classes.movieCard} ${classes.front}`}>\r\n          <div className={classes.badges}>\r\n            <div className={classes.badge}>\r\n              {props.movieReleaseYear}\r\n            </div>\r\n            <div className={`${classes.badge} ${classes.rating}`}>\r\n              <StarIcon className={classes.star}></StarIcon>\r\n              {props.movieRating}\r\n            </div>\r\n          </div>\r\n          <div className={classes.title}>\r\n            {props.movieName}\r\n          </div>\r\n      </Card>\r\n      <Card className={`${classes.movieCard} ${classes.back}`}>\r\n          <Button className={classes.detailsBtn} variant=\"contained\" color=\"primary\" onClick={() => history.push(`/movie/${state.imdbId}`)}>\r\n            Details\r\n          </Button>\r\n          <div className={classes.title}>\r\n            <Favorite favMovies={props.favMovies} onToggleIsFavorite={props.onToggleIsFavorite} movieId={state.imdbId} />\r\n            <div>{props.movieName}</div>\r\n          </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory} from 'react-router-dom'\r\nimport {Box, Button} from \"@material-ui/core\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport service from \"../../Services/service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    carousel: {\r\n        margin: `0 auto`,\r\n        width: `70%`\r\n    },\r\n    movieInfo: {\r\n        display: `flex`,\r\n        flexDirection: `column`,\r\n        alignItems: `flex-start`\r\n    },\r\n    details: {\r\n        width: `25%`,\r\n        marginTop: `20px`,\r\n        display: `flex`,\r\n        justifyContent: `space-between`\r\n    },\r\n    detailsBtn: {\r\n        '&:hover': {\r\n          color: `black`,\r\n          backgroundColor: `aqua`,\r\n          transform: `translateY(-2px)`\r\n        }\r\n    },\r\n    rating: {\r\n        display: `flex`,\r\n        alignItems: `center`,\r\n        justifyContent: `space-between`\r\n    },\r\n    star: {\r\n        marginRight: 10,\r\n        color: `yellow`\r\n    }\r\n  }));\r\n\r\nfunction NowPlayingCarousel() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [state, setState] = useState({\r\n    carouselMovies: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function getMovies(moviesToShow) {\r\n      const gottenMovies = await service.query(moviesToShow);\r\n      const fiveRandomMovies = service.getFiveRandomMovies(gottenMovies.results);\r\n      setState((state) => ({ ...state, carouselMovies: fiveRandomMovies }));\r\n    }\r\n    getMovies(\"latest\");\r\n  }, []);\r\n\r\n  const getImgUrl = (backdropPath) => {\r\n    return `https://image.tmdb.org/t/p/original${backdropPath}`;\r\n  };\r\n\r\n  const getReleaseYear = (releaseDate) => {\r\n    return releaseDate.slice(0, 4)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.carousel}>\r\n      <Carousel infiniteLoop showStatus={false} showThumbs={false} showIndicators={false}>\r\n            {state.carouselMovies.length > 0 && state.carouselMovies.map((movie, index) => (\r\n                <div key={index} >\r\n                    <img src={getImgUrl(movie.backdrop_path)} alt=\"\" />\r\n                    <div className=\"legend\">\r\n                        <div className={classes.movieInfo}>\r\n                            <Box lineHeight={2} fontSize={16} fontWeight=\"fontWeightBold\">{movie.original_title}</Box>\r\n                            <Box textAlign=\"left\">{movie.overview}</Box>\r\n                            <div className={classes.details}>\r\n                                <Button className={classes.detailsBtn} variant=\"contained\" color=\"primary\" onClick={() => history.push(`/movie/${movie.id}`)}>Details</Button>\r\n                                <div className={classes.movieInfo}>\r\n                                    <Box>{getReleaseYear(movie.release_date)}</Box>\r\n                                    <Box>runtime...</Box>\r\n                                </div>\r\n                                <div className={classes.rating}>\r\n                                    <StarIcon className={classes.star}></StarIcon>\r\n                                    {movie.vote_average}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NowPlayingCarousel;","import React, { useState, useEffect } from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MovieCard from \"../../Components/MovieCard/index\";\r\nimport NowPlayingCarousel from \"../../Components/NowPlayingCarousel/index\";\r\nimport service from \"../../Services/service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  homePage: {\r\n    marginTop: 40,\r\n  },\r\n  intro: {\r\n    marginBottom: 20,\r\n    display: `flex`,\r\n    flexDirection: `column`,\r\n    alignItems: `center`,\r\n  },\r\n  title: {\r\n    color: `white`,\r\n    marginTop: 20,\r\n  },\r\n  subtitle: {\r\n    color: `aqua`,\r\n  },\r\n  cardContainer: {\r\n    padding: 20,\r\n    display: `grid`,\r\n    gridTemplateColumns: `repeat(auto-fill, minmax(180px, 1fr))`,\r\n    gridAutoRows: `auto`,\r\n    gridGap: `1rem`,\r\n  },\r\n  queryType: {\r\n    width: `25%`,\r\n    display: `flex`,\r\n    justifyContent: `space-between`,\r\n    margin: `20px 0`,\r\n  },\r\n  queryBtn: {\r\n    cursor: `pointer`,\r\n    color: `white`,\r\n    border: `1px solid aqua`,\r\n    padding: `5px 10px`,\r\n    transition: `all .3s`,\r\n    \"&:hover\": {\r\n      color: `black`,\r\n      backgroundColor: `aqua`,\r\n      transition: `all .3s`,\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Home(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    movies: [],\r\n    moviesToShow: \"popular\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function getMovies(moviesToShow) {\r\n      const gottenMovies = await service.query(moviesToShow);\r\n      setState((state) => ({ ...state, movies: gottenMovies.results }));\r\n    }\r\n    getMovies(state.moviesToShow);\r\n  }, [state.moviesToShow]);\r\n\r\n  const moviesToShow = (param) => {\r\n    setState((state) => ({ ...state, moviesToShow: param }));\r\n  };\r\n\r\n  const getReleaseYear = (releaseDate) => {\r\n    if (releaseDate) {\r\n      return releaseDate.slice(0, 4);\r\n    } else {\r\n      return \"TBD\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.homePage}>\r\n      <NowPlayingCarousel />\r\n      <div>\r\n        <div className={classes.intro}>\r\n          <Box\r\n            className={classes.title}\r\n            fontSize=\"h4.fontSize\"\r\n            fontWeight=\"fontWeightBold\"\r\n          >\r\n            Welcome to Our Movie Database\r\n          </Box>\r\n          <Box\r\n            className={classes.subtitle}\r\n            fontSize=\"h5.fontSize\"\r\n            fontWeight=\"fontWeightMedium\"\r\n          >\r\n            Discover and Watch\r\n          </Box>\r\n          <div className={classes.queryType}>\r\n            <div\r\n              className={classes.queryBtn}\r\n              onClick={() => {\r\n                moviesToShow(\"popular\");\r\n              }}\r\n              style={\r\n                state.moviesToShow === \"popular\"\r\n                  ? { backgroundColor: \"aqua\", color: \"black\" }\r\n                  : {}\r\n              }\r\n            >\r\n              Popular\r\n            </div>\r\n            <div\r\n              className={classes.queryBtn}\r\n              onClick={() => {\r\n                moviesToShow(\"trending\");\r\n              }}\r\n              style={\r\n                state.moviesToShow === \"trending\"\r\n                  ? { backgroundColor: \"aqua\", color: \"black\" }\r\n                  : {}\r\n              }\r\n            >\r\n              Trending\r\n            </div>\r\n            <div\r\n              className={classes.queryBtn}\r\n              onClick={() => {\r\n                moviesToShow(\"latest\");\r\n              }}\r\n              style={\r\n                state.moviesToShow === \"latest\"\r\n                  ? { backgroundColor: \"aqua\", color: \"black\" }\r\n                  : {}\r\n              }\r\n            >\r\n              Latest\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={classes.cardContainer}>\r\n          {state.movies.map((movie, index) => (\r\n            <MovieCard\r\n              key={index}\r\n              movieId={movie.id}\r\n              movieReleaseYear={getReleaseYear(movie.release_date)}\r\n              movieRating={movie.vote_average}\r\n              movieName={movie.original_title}\r\n              posterPath={movie.poster_path}\r\n              favMovies={props.favMovies}\r\n              onToggleIsFavorite={props.onToggleIsFavorite}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box } from '@material-ui/core';\r\nimport service from \"../../Services/service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\nrater: {\r\n  color: `#4484A4`,\r\n  // fontWeight: `bold`,\r\n  display: `flex`,\r\n  flexDirection: `column`,\r\n  alignItems: `center`,\r\n  backgroundColor: `rgba(0, 0, 0, 0.4)`,\r\n  padding: `0 10px`,\r\n  borderRadius: 12,\r\n},\r\n}));\r\n\r\nfunction Rating(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    currRating: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    setState((state) => ({...state, currRating: props.currRating }));\r\n  }, [props.currRating]);\r\n\r\n  const getRater = (rawRaterName) => { // This will get replaced by their respective logos\r\n    switch(rawRaterName){\r\n      case 'Internet Movie Database':\r\n          return 'IMDB'\r\n      case 'Rotten Tomatoes':\r\n          return 'Rotten'\r\n      case 'Metacritic':\r\n          return 'Meta'\r\n      default:\r\n          return 'other'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {state.currRating && <div> \r\n          <div className={classes.rater}>\r\n            <Box className={classes.plot} fontSize=\"fontSize\" fontWeight=\"fontWeightBold\">{getRater(state.currRating.Source)}</Box>\r\n            <Box className={classes.plot} fontSize=\"fontSize\" fontWeight=\"fontWeightRegular\">{state.currRating.Value}</Box>\r\n          </div>\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rating;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box } from '@material-ui/core';\r\nimport service from \"../../Services/service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  imgBackground: {\r\n    display: `flex`,\r\n    flexDirection: `column`,\r\n    justifyContent: `center`,\r\n    alignItems: `center`,\r\n    paddingTop: 10,\r\n    backgroundColor: `#4484A4`,\r\n    boxShadow: `2px 2px 5px 0px rgba(0,0,0,1)`,\r\n  },\r\n  image: {\r\n    width: `90%`,\r\n    height: `90%`\r\n  },\r\n  name: {\r\n    marginBottom: 20\r\n  }\r\n}));\r\n\r\nfunction Actor(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    currActor: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function getActorById(what, actorName) {\r\n      const gottenActor = await service.searchByKeyword(what, actorName);\r\n      setState((state) => ({...state, currActor: gottenActor.results[0] }));\r\n    } \r\n    getActorById('actors', props.currActor);\r\n  }, [props.currActor]);\r\n\r\n  const getImgUrl = (imgPath) => {\r\n    return `https://image.tmdb.org/t/p/original${imgPath}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {state.currActor && <div>\r\n          <div className={classes.imgBackground}>\r\n            <img className={classes.image} src={getImgUrl(state.currActor.profile_path)} alt=\"\" />\r\n            <Box className={classes.name} fontSize=\"h6.fontSize\" fontWeight=\"fontWeightBold\">{state.currActor.name}</Box>\r\n          </div>\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Actor;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams} from 'react-router-dom'\r\nimport { Box } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Rating from \"../../Components/Rating/index\"\r\nimport Actor from \"../../Components/Actor/index\"\r\nimport Favorite from \"../../Components/Favorite/index\"\r\nimport service from \"../../Services/service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  moviePage: {\r\n    marginTop: 40,\r\n    backgroundImage: `linear-gradient(rgb(50, 60, 80), rgb(100, 150, 150))`,\r\n    color: `white`\r\n  },\r\n  body: {\r\n    margin: `0 auto`,\r\n    width: `70%`,\r\n    backgroundColor: `#A1C5D8`,\r\n    border: `none`,\r\n    boxShadow: `4px 0px 5px 0px rgba(0,0,0,0.75)`\r\n  },\r\n  backdrop: {\r\n    position: `relative`,\r\n    height: 400,\r\n    backgroundImage: (state) => state.imgUrl,\r\n    backgroundRepeat: `no-repeat`,\r\n    backgroundSize: `100%`,\r\n  },\r\n  movieInfo: {\r\n    display: `flex`,\r\n    flexDirection: `column`,\r\n    alignItems: `center`,\r\n    margin: `0 auto`,\r\n    width: `50%`,\r\n    backgroundColor: `rgba(0, 0, 0, 0.3)`,\r\n    borderRadius: 12,\r\n    padding: 20\r\n  },\r\n  title: {\r\n    fontSize: `2vw`,\r\n    fontWeight: `bold`,\r\n    color: `#A0C4D7`,\r\n    display: `flex`,\r\n  },\r\n  subTitle: {\r\n    fontSize: `1vw`,\r\n    color: `#A0C4D7`,\r\n    display: `flex`\r\n  },\r\n  ratings: {\r\n    marginTop: 20,\r\n    width: `60%`,\r\n    display: `flex`,\r\n    justifyContent: `space-between`\r\n  },\r\n  tagline: {\r\n    margin: 20,\r\n    color: `#2C4464`,\r\n  },\r\n  plot: {\r\n    width: `60%`,\r\n    margin: 20,\r\n    color: `#2C4464`,\r\n  },\r\n  actorsContainer: { //this will need to be converted into a proper carousel...\r\n    padding: 20,\r\n    display: `grid`,\r\n    gridTemplateColumns: `repeat(auto-fill, minmax(180px, 1fr))`,\r\n    gridAutoRows: `auto`,\r\n    gridGap: `1rem`,\r\n  },\r\n  marginLeft: {\r\n    marginLeft: 10\r\n  },\r\n  favorite:{\r\n    position: `absolute`,\r\n    top: 10,\r\n    left: 10\r\n  }\r\n}));\r\n\r\nfunction MovieDetails(props) {\r\n  const { id } = useParams();\r\n  const [state, setState] = useState({\r\n    currMovie: null,\r\n    tagline: null,\r\n    imgUrl: null\r\n  });\r\n  const classes = useStyles(state);\r\n\r\n  useEffect(() => {\r\n    async function getMovieById(what, imdbMovieId) {\r\n      const gottenMovie = await service.getById(what, imdbMovieId);\r\n      const movieDetails = await service.getMovieFromOMDBByIMDBId(gottenMovie.imdb_id);\r\n      setState((state) => ({...state, currMovie: movieDetails, tagline: gottenMovie.tagline, imgUrl: getImgUrl(gottenMovie.backdrop_path) }));\r\n    } \r\n    getMovieById('movie', id);\r\n  }, [id]);\r\n\r\n  const getImgUrl = (backdropPath) => {\r\n    return `url(\"https://image.tmdb.org/t/p/original${backdropPath}\")`;\r\n  };\r\n\r\n  const formattedActorList = () => {\r\n    return state.currMovie.Actors.split(', ');\r\n  }\r\n\r\n  //TODO:\r\n  // add \"reviews\" by using: https://api.themoviedb.org/3/movie/581392/reviews?api_key=e5a2122bd03016f587131ffe3ecc2596&language=en-US&page=1\r\n  \r\n  return (\r\n    <div className={classes.moviePage}>\r\n      {state.currMovie && <div>\r\n        <div className={classes.body}>\r\n          <div className={classes.backdrop}>\r\n            <div className={classes.favorite}>\r\n              <Favorite favMovies={props.favMovies} onToggleIsFavorite={props.onToggleIsFavorite} movieId={state.currMovie.imdbID} />\r\n            </div>\r\n            <div className={classes.movieInfo}>\r\n              <div className={classes.title}>\r\n                <div>{state.currMovie.Title} </div>\r\n                <div className={classes.marginLeft}>({state.currMovie.Year})</div>\r\n              </div>\r\n              <div className={classes.subTitle}>\r\n                <div>{state.currMovie.Genre} |</div>\r\n                <div className={classes.marginLeft}> {state.currMovie.Runtime} |</div>\r\n                <div className={classes.marginLeft}> {state.currMovie.Language}</div>\r\n              </div>\r\n              <div className={classes.ratings}>\r\n                {state.currMovie.Ratings.map((rating, index) => (\r\n                  <Rating key={index} currRating={rating} />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {state.tagline && <Box className={classes.tagline} fontSize=\"h4.fontSize\" fontStyle=\"italic\" fontWeight=\"fontWeightBold\">\"{state.tagline}\"</Box>}\r\n          <Box className={classes.plot} fontSize=\"h6.fontSize\" fontWeight=\"fontWeightRegular\">{state.currMovie.Plot}</Box>\r\n          <div className={classes.actorsContainer}>\r\n            {formattedActorList().map((actor, index) => (\r\n              <Actor key={index} currActor={actor}/>\r\n            ))}\r\n          </div>\r\n          \r\n        </div>\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MovieCard from \"../../Components/MovieCard/index\";\r\nimport service from \"../../Services/service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  homePage: {\r\n    height: `100vh`,\r\n    marginTop: 40,\r\n  },\r\n  cardContainer: {\r\n    padding: 20,\r\n    display: `grid`,\r\n    gridTemplateColumns: `repeat(auto-fill, minmax(180px, 1fr))`,\r\n    gridAutoRows: `auto`,\r\n    gridGap: `1rem`,\r\n  }\r\n}));\r\n\r\nfunction FavoriteMovies(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    favMovies: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getMovieDetails = async () => {\r\n        return Promise.all(props.favMovies.map(movie => service.getById('movie', movie)))\r\n    }\r\n    getMovieDetails()\r\n    .then(results => {\r\n        setState(state => ({ ...state, favMovies: results }))\r\n    })\r\n  }, [props.favMovies]);\r\n\r\n  const getReleaseYear = (releaseDate) => {\r\n    return releaseDate.slice(0, 4)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.homePage}>\r\n      {state.favMovies && <div className={classes.cardContainer}>\r\n        {state.favMovies.map((movie, index) => (\r\n          <MovieCard \r\n            key={index} \r\n            movieId={movie.id} \r\n            movieReleaseYear={getReleaseYear(movie.release_date)} \r\n            movieRating={movie.vote_average} \r\n            movieName={movie.original_title} \r\n            posterPath={movie.poster_path} \r\n            favMovies={props.favMovies}\r\n            onToggleIsFavorite={props.onToggleIsFavorite}\r\n          />\r\n        ))}\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FavoriteMovies;\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams} from 'react-router-dom'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport service from \"../../Services/service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  actorPage: {\r\n    marginTop: 40,\r\n    color: `white`\r\n  },\r\n  imagesContainer: {\r\n    padding: 20,\r\n    display: `grid`,\r\n    gridTemplateColumns: `repeat(auto-fill, minmax(180px, 1fr))`,\r\n    gridAutoRows: `auto`,\r\n    gridGap: `1rem`,\r\n  },\r\n  imgBackground: {\r\n    display: `flex`,\r\n    justifyContent: `center`,\r\n    paddingTop: 10,\r\n    width: 200,\r\n    height: 300,\r\n    backgroundColor: `white`,\r\n    transition: `transform 0.3s ease 0s`,\r\n    boxShadow: `2px 2px 5px 0px rgba(0,0,0,1)`,\r\n    '&:hover': {\r\n      transform: `translateY(-2px) rotate(1deg)`,\r\n      transition: `transform 0.3s ease 0s`,\r\n    }\r\n  },\r\n  image: {\r\n    width: `90%`,\r\n    height: `90%`\r\n  }\r\n}));\r\n\r\nfunction ActorDetails() {\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n  const [state, setState] = useState({\r\n    currActor: null,\r\n    actorImages: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function getActorById(what, tmdbActorId) {\r\n      const gottenActor = await service.getById(what, tmdbActorId);\r\n      const actorImages = await service.getImages(tmdbActorId);\r\n      Promise.all([gottenActor, actorImages])\r\n      .then((results) => {\r\n          const actor = results[0];\r\n          const actorImageArr = results[1].profiles;\r\n          setState((state) => ({...state, currActor: actor, actorImages: actorImageArr }));\r\n      });    \r\n    } \r\n    getActorById('actor', id);\r\n  }, [id]);\r\n\r\n  const getImgUrl = (imgPath) => {\r\n    return `https://image.tmdb.org/t/p/original${imgPath}`;\r\n  };\r\n\r\n  return (\r\n    <div className={classes.actorPage}>\r\n      {state.currActor && <div>\r\n        <div>Actor Name: {state.currActor.name}</div>\r\n          <div className={classes.imagesContainer}>Images:\r\n            {state.actorImages.map((image, index) => (\r\n              <div className={classes.imgBackground}>\r\n                <img className={classes.image} key={index} src={getImgUrl(image.file_path)} alt=\"\"  />\r\n              </div>\r\n            ))}\r\n          </div>\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ActorDetails;\r\n","export default {\r\n    loadFromLocalStorage,\r\n    saveToLocalStorage\r\n}\r\n\r\nfunction loadFromLocalStorage(favMovies) {\r\n    return JSON.parse(localStorage.getItem(favMovies));\r\n}\r\n\r\nfunction saveToLocalStorage(movieId) {\r\n  const localStorageData = JSON.parse(localStorage.getItem('favoriteMovies'));\r\n  if (localStorageData) {\r\n    const favMovieIdx = localStorageData.indexOf(movieId)\r\n    if (favMovieIdx != -1) {\r\n      localStorageData.splice(favMovieIdx,1);\r\n      localStorage.setItem('favoriteMovies', JSON.stringify(localStorageData));\r\n    } else if (favMovieIdx === -1){\r\n      localStorageData.push(movieId);\r\n      localStorage.setItem('favoriteMovies', JSON.stringify(localStorageData));\r\n    }\r\n  } else {\r\n    const newFavMovieArr = [];\r\n    newFavMovieArr.push(movieId);\r\n    localStorage.setItem('favoriteMovies', JSON.stringify(newFavMovieArr));\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Navbar from \"./Components/Navbar/index\";\r\nimport Home from \"./Pages/Home/index\"\r\nimport MovieDetails from './Pages/MovieDetails/index'\r\nimport FavoriteMovies from './Pages/FavoriteMovies/index'\r\nimport ActorDetails from './Pages/ActorDetails/index'\r\nimport storageService from \"./Services/storageService\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [state, setState] = useState({\r\n    favoriteMovies: null,\r\n  });\r\n  \r\n  useEffect(() => {\r\n    const favMovies = storageService.loadFromLocalStorage('favoriteMovies');\r\n      if(favMovies) {\r\n        setState((state) => ({...state, favoriteMovies: favMovies }));\r\n      }\r\n  }, []);\r\n\r\n  const toggleIsFavorite = (movieId) => {\r\n    storageService.saveToLocalStorage(movieId)\r\n    console.log('now going to reload the favMovies...');\r\n    reloadFavMovies()\r\n  }\r\n\r\n  const reloadFavMovies = () => {\r\n    const favMovies = storageService.loadFromLocalStorage('favoriteMovies');\r\n    setState((state) => ({...state, favoriteMovies: favMovies }));\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => (<Home onToggleIsFavorite={toggleIsFavorite} favMovies={state.favoriteMovies} />)} />\r\n        <Route exact path=\"/favmovies/\" render={() => (<FavoriteMovies onToggleIsFavorite={toggleIsFavorite} favMovies={state.favoriteMovies} />)} />\r\n        <Route exact path=\"/movie/:id\" render={() => (<MovieDetails onToggleIsFavorite={toggleIsFavorite} favMovies={state.favoriteMovies} />)} />\r\n        <Route exact path=\"/actor/:id\" render={() => (<ActorDetails />)} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { Router } from \"react-router-dom\";\r\nimport {BrowserRouter as Router } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router history={history}>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}